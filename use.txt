from flask import Flask, request, jsonify
from flask_sqlalchemy import SQLAlchemy
from sqlalchemy.exc import IntegrityError

app = Flask(__name__)

# Database Configuration
app.config['SQLALCHEMY_DATABASE_URI'] = 'mysql+pymysql://username:password@localhost/career_connect'
app.config['SQLALCHEMY_TRACK_MODIFICATIONS'] = False

db = SQLAlchemy(app)

# Your Models (already defined: JobSeeker, JobPosting, Application)

@app.route('/apply', methods=['POST'])
def apply_for_job():
    try:
        data = request.json  # Get JSON data from request
        job_posting_id = data.get('job_posting_id')
        job_seeker_id = data.get('job_seeker_id')

        # Check if this application already exists (optional)
        existing_application = Application.query.filter_by(
            job_posting_id=job_posting_id,
            job_seeker_id=job_seeker_id
        ).first()

        if existing_application:
            return jsonify({"message": "You have already applied for this job."}), 400

        # Create new application entry
        new_application = Application(
            job_posting_id=job_posting_id,
            job_seeker_id=job_seeker_id,
            job_seeker_status=0,  # Default status for job seeker
            employer_status=0     # Default status for employer
        )

        db.session.add(new_application)
        db.session.commit()

        return jsonify({"message": "Application submitted successfully!"}), 201

    except IntegrityError:
        db.session.rollback()  # Rollback if there's a conflict or integrity error
        return jsonify({"message": "Error: Unable to submit application."}), 500

    except Exception as e:
        return jsonify({"message": str(e)}), 500

if __name__ == '__main__':
    app.run(debug=True)